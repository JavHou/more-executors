[tox]
envlist = py26,py27,py36,static,docs

[testenv]
deps=-rtest-requirements.txt
commands=pytest -v {posargs}
whitelist_externals=sh

[testenv:py26]
basepython=python2.6

[testenv:py27]
basepython=python2.7

[testenv:static]
deps=
	flake8
	mccabe
	flake8-bugbear
	pylint
	-rtest-requirements.txt
commands=
	flake8 \
	  --max-complexity 10
	sh -c 'pylint more_executors tests; test $(( $? & (1|2|4|32) )) = 0'

[testenv:cov]
deps=
	-rtest-requirements.txt
	pytest-cov
usedevelop=true
commands=
	pytest --cov-report=html --cov=more_executors {posargs}

[testenv:cov-circle-py27]
passenv = COVERALLS_REPO_TOKEN CIRCLECI CIRCLE_* CI_PULL_REQUEST
deps=
	-rtest-requirements.txt
	pytest-cov
	coveralls
usedevelop=true
commands=
	pytest --cov=more_executors {posargs}
	coveralls --output=coverage.json

[testenv:cov-circle-py36]
passenv = COVERALLS_REPO_TOKEN CIRCLECI CIRCLE_* CI_PULL_REQUEST
deps=
	-rtest-requirements.txt
	pytest-cov
	coveralls
usedevelop=true
commands=
	pytest --cov=more_executors {posargs}
	sh -c 'if ! test -z "$\{COVERALLS_REPO_TOKEN\}"; then coveralls --merge=coverage.json; fi'

[testenv:docs]
deps=
	sphinx
	alabaster
whitelist_externals=sh
use_develop=true
commands=
	sh -c '\
	    sphinx-build \
	    -D version="$(python ./setup.py --version), revision $(git rev-parse --short HEAD)" \
	    docs docs/_build \
	'

[flake8]
max-line-length = 100
